// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Votacion.Models;

#nullable disable

namespace Votacion.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    partial class LibreriaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Votacion.Models.Entidades.Candidato", b =>
                {
                    b.Property<int>("IdCandidato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCandidato"));

                    b.Property<string>("ApellidoCandidato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EleccionIdEleccion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEleccion")
                        .HasColumnType("int");

                    b.Property<string>("ImgCandidato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCandidato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCandidato");

                    b.HasIndex("EleccionIdEleccion");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("Votacion.Models.Entidades.Eleccion", b =>
                {
                    b.Property<int>("IdEleccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEleccion"));

                    b.Property<decimal>("Activo")
                        .HasColumnType("decimal (18,2)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.HasKey("IdEleccion");

                    b.ToTable("Elecciones");
                });

            modelBuilder.Entity("Votacion.Models.Entidades.Roles", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Votacion.Models.Entidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("ApellidoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaveUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentoIdentidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RolesIdRol")
                        .HasColumnType("int");

                    b.Property<string>("URLFotoPerfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("RolesIdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Votacion.Models.Entidades.Votaciones", b =>
                {
                    b.Property<int>("IdVotacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVotacion"));

                    b.Property<int?>("CandidatoIdCandidato")
                        .HasColumnType("int");

                    b.Property<int?>("EleccionIdEleccion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCandidato")
                        .HasColumnType("int");

                    b.Property<int>("IdEleccion")
                        .HasColumnType("int");

                    b.Property<int>("IdVotante")
                        .HasColumnType("int");

                    b.Property<int?>("VotanteIdVotante")
                        .HasColumnType("int");

                    b.HasKey("IdVotacion");

                    b.HasIndex("CandidatoIdCandidato");

                    b.HasIndex("EleccionIdEleccion");

                    b.HasIndex("VotanteIdVotante");

                    b.ToTable("Votaciones");
                });

            modelBuilder.Entity("Votacion.Models.Entidades.Votante", b =>
                {
                    b.Property<int>("IdVotante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVotante"));

                    b.Property<string>("ApellidoVotante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentoIdentidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreVotante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVotante");

                    b.ToTable("Votantes");
                });

            modelBuilder.Entity("Votacion.Models.Entidades.Candidato", b =>
                {
                    b.HasOne("Votacion.Models.Entidades.Eleccion", "Eleccion")
                        .WithMany()
                        .HasForeignKey("EleccionIdEleccion");

                    b.Navigation("Eleccion");
                });

            modelBuilder.Entity("Votacion.Models.Entidades.Usuario", b =>
                {
                    b.HasOne("Votacion.Models.Entidades.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesIdRol");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Votacion.Models.Entidades.Votaciones", b =>
                {
                    b.HasOne("Votacion.Models.Entidades.Candidato", "Candidato")
                        .WithMany()
                        .HasForeignKey("CandidatoIdCandidato");

                    b.HasOne("Votacion.Models.Entidades.Eleccion", "Eleccion")
                        .WithMany()
                        .HasForeignKey("EleccionIdEleccion");

                    b.HasOne("Votacion.Models.Entidades.Votante", "Votante")
                        .WithMany()
                        .HasForeignKey("VotanteIdVotante");

                    b.Navigation("Candidato");

                    b.Navigation("Eleccion");

                    b.Navigation("Votante");
                });
#pragma warning restore 612, 618
        }
    }
}
